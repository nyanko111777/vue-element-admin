{"remainingRequest":"C:\\Users\\M151325\\000_work\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\M151325\\000_work\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\M151325\\000_work\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\M151325\\000_work\\vue-element-admin\\src\\views\\permission\\role.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\M151325\\000_work\\vue-element-admin\\src\\views\\permission\\role.vue","mtime":1679607516374},{"path":"C:\\Users\\M151325\\000_work\\vue-element-admin\\babel.config.js","mtime":1679607516108},{"path":"C:\\Users\\M151325\\000_work\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1679607677967},{"path":"C:\\Users\\M151325\\000_work\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1679607680373},{"path":"C:\\Users\\M151325\\000_work\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1679607677967},{"path":"C:\\Users\\M151325\\000_work\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1679607681357}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["path","deepClone","getRoutes","getRoles","addRole","deleteRole","updateRole","defaultRole","key","name","description","routes","data","role","Object","assign","rolesList","dialogVisible","dialogType","checkStrictly","defaultProps","children","label","computed","routesData","created","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_callee$","_context","prev","next","sent","serviceRoutes","generateRoutes","stop","_this2","_callee2","_callee2$","_context2","basePath","arguments","length","undefined","_iterator","_createForOfIteratorHelper","_step","s","n","done","route","value","hidden","onlyOneShowingChild","alwaysShow","resolve","title","meta","push","err","e","f","generateArr","_this3","forEach","temp","concat","_toConsumableArray","handleAddRole","$refs","tree","setCheckedNodes","handleEdit","scope","_this4","row","$nextTick","handleDelete","_ref","_this5","$index","$confirm","confirmButtonText","cancelButtonText","type","then","_callee3","_callee3$","_context3","splice","$message","message","catch","console","error","generateTree","checkedKeys","_iterator2","_step2","routePath","includes","confirmRole","_this6","_callee4","isEdit","index","_yield$addRole","_this6$role","_callee4$","_context4","getCheckedKeys","abrupt","$notify","dangerouslyUseHTMLString","parent","onlyOneChild","showingChildren","filter","item","_objectSpread","noShowingChildren"],"sources":["src/views/permission/role.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-button type=\"primary\" @click=\"handleAddRole\">New Role</el-button>\r\n\r\n    <el-table :data=\"rolesList\" style=\"width: 100%;margin-top:30px;\" border>\r\n      <el-table-column align=\"center\" label=\"Role Key\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.key }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"center\" label=\"Role Name\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.name }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"header-center\" label=\"Description\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.description }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"center\" label=\"Operations\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope)\">Edit</el-button>\r\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope)\">Delete</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-dialog :visible.sync=\"dialogVisible\" :title=\"dialogType==='edit'?'Edit Role':'New Role'\">\r\n      <el-form :model=\"role\" label-width=\"80px\" label-position=\"left\">\r\n        <el-form-item label=\"Name\">\r\n          <el-input v-model=\"role.name\" placeholder=\"Role Name\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"Desc\">\r\n          <el-input\r\n            v-model=\"role.description\"\r\n            :autosize=\"{ minRows: 2, maxRows: 4}\"\r\n            type=\"textarea\"\r\n            placeholder=\"Role Description\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"Menus\">\r\n          <el-tree\r\n            ref=\"tree\"\r\n            :check-strictly=\"checkStrictly\"\r\n            :data=\"routesData\"\r\n            :props=\"defaultProps\"\r\n            show-checkbox\r\n            node-key=\"path\"\r\n            class=\"permission-tree\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div style=\"text-align:right;\">\r\n        <el-button type=\"danger\" @click=\"dialogVisible=false\">Cancel</el-button>\r\n        <el-button type=\"primary\" @click=\"confirmRole\">Confirm</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport path from 'path'\r\nimport { deepClone } from '@/utils'\r\nimport { getRoutes, getRoles, addRole, deleteRole, updateRole } from '@/api/role'\r\n\r\nconst defaultRole = {\r\n  key: '',\r\n  name: '',\r\n  description: '',\r\n  routes: []\r\n}\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      role: Object.assign({}, defaultRole),\r\n      routes: [],\r\n      rolesList: [],\r\n      dialogVisible: false,\r\n      dialogType: 'new',\r\n      checkStrictly: false,\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'title'\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    routesData() {\r\n      return this.routes\r\n    }\r\n  },\r\n  created() {\r\n    // Mock: get all routes and roles list from server\r\n    this.getRoutes()\r\n    this.getRoles()\r\n  },\r\n  methods: {\r\n    async getRoutes() {\r\n      const res = await getRoutes()\r\n      this.serviceRoutes = res.data\r\n      this.routes = this.generateRoutes(res.data)\r\n    },\r\n    async getRoles() {\r\n      const res = await getRoles()\r\n      this.rolesList = res.data\r\n    },\r\n\r\n    // Reshape the routes structure so that it looks the same as the sidebar\r\n    generateRoutes(routes, basePath = '/') {\r\n      const res = []\r\n\r\n      for (let route of routes) {\r\n        // skip some route\r\n        if (route.hidden) { continue }\r\n\r\n        const onlyOneShowingChild = this.onlyOneShowingChild(route.children, route)\r\n\r\n        if (route.children && onlyOneShowingChild && !route.alwaysShow) {\r\n          route = onlyOneShowingChild\r\n        }\r\n\r\n        const data = {\r\n          path: path.resolve(basePath, route.path),\r\n          title: route.meta && route.meta.title\r\n\r\n        }\r\n\r\n        // recursive child routes\r\n        if (route.children) {\r\n          data.children = this.generateRoutes(route.children, data.path)\r\n        }\r\n        res.push(data)\r\n      }\r\n      return res\r\n    },\r\n    generateArr(routes) {\r\n      let data = []\r\n      routes.forEach(route => {\r\n        data.push(route)\r\n        if (route.children) {\r\n          const temp = this.generateArr(route.children)\r\n          if (temp.length > 0) {\r\n            data = [...data, ...temp]\r\n          }\r\n        }\r\n      })\r\n      return data\r\n    },\r\n    handleAddRole() {\r\n      this.role = Object.assign({}, defaultRole)\r\n      if (this.$refs.tree) {\r\n        this.$refs.tree.setCheckedNodes([])\r\n      }\r\n      this.dialogType = 'new'\r\n      this.dialogVisible = true\r\n    },\r\n    handleEdit(scope) {\r\n      this.dialogType = 'edit'\r\n      this.dialogVisible = true\r\n      this.checkStrictly = true\r\n      this.role = deepClone(scope.row)\r\n      this.$nextTick(() => {\r\n        const routes = this.generateRoutes(this.role.routes)\r\n        this.$refs.tree.setCheckedNodes(this.generateArr(routes))\r\n        // set checked state of a node not affects its father and child nodes\r\n        this.checkStrictly = false\r\n      })\r\n    },\r\n    handleDelete({ $index, row }) {\r\n      this.$confirm('Confirm to remove the role?', 'Warning', {\r\n        confirmButtonText: 'Confirm',\r\n        cancelButtonText: 'Cancel',\r\n        type: 'warning'\r\n      })\r\n        .then(async() => {\r\n          await deleteRole(row.key)\r\n          this.rolesList.splice($index, 1)\r\n          this.$message({\r\n            type: 'success',\r\n            message: 'Delete succed!'\r\n          })\r\n        })\r\n        .catch(err => { console.error(err) })\r\n    },\r\n    generateTree(routes, basePath = '/', checkedKeys) {\r\n      const res = []\r\n\r\n      for (const route of routes) {\r\n        const routePath = path.resolve(basePath, route.path)\r\n\r\n        // recursive child routes\r\n        if (route.children) {\r\n          route.children = this.generateTree(route.children, routePath, checkedKeys)\r\n        }\r\n\r\n        if (checkedKeys.includes(routePath) || (route.children && route.children.length >= 1)) {\r\n          res.push(route)\r\n        }\r\n      }\r\n      return res\r\n    },\r\n    async confirmRole() {\r\n      const isEdit = this.dialogType === 'edit'\r\n\r\n      const checkedKeys = this.$refs.tree.getCheckedKeys()\r\n      this.role.routes = this.generateTree(deepClone(this.serviceRoutes), '/', checkedKeys)\r\n\r\n      if (isEdit) {\r\n        await updateRole(this.role.key, this.role)\r\n        for (let index = 0; index < this.rolesList.length; index++) {\r\n          if (this.rolesList[index].key === this.role.key) {\r\n            this.rolesList.splice(index, 1, Object.assign({}, this.role))\r\n            break\r\n          }\r\n        }\r\n      } else {\r\n        const { data } = await addRole(this.role)\r\n        this.role.key = data.key\r\n        this.rolesList.push(this.role)\r\n      }\r\n\r\n      const { description, key, name } = this.role\r\n      this.dialogVisible = false\r\n      this.$notify({\r\n        title: 'Success',\r\n        dangerouslyUseHTMLString: true,\r\n        message: `\r\n            <div>Role Key: ${key}</div>\r\n            <div>Role Name: ${name}</div>\r\n            <div>Description: ${description}</div>\r\n          `,\r\n        type: 'success'\r\n      })\r\n    },\r\n    // reference: src/view/layout/components/Sidebar/SidebarItem.vue\r\n    onlyOneShowingChild(children = [], parent) {\r\n      let onlyOneChild = null\r\n      const showingChildren = children.filter(item => !item.hidden)\r\n\r\n      // When there is only one child route, the child route is displayed by default\r\n      if (showingChildren.length === 1) {\r\n        onlyOneChild = showingChildren[0]\r\n        onlyOneChild.path = path.resolve(parent.path, onlyOneChild.path)\r\n        return onlyOneChild\r\n      }\r\n\r\n      // Show parent if there are no child route to display\r\n      if (showingChildren.length === 0) {\r\n        onlyOneChild = { ... parent, path: '', noShowingChildren: true }\r\n        return onlyOneChild\r\n      }\r\n\r\n      return false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.app-container {\r\n  .roles-table {\r\n    margin-top: 30px;\r\n  }\r\n  .permission-tree {\r\n    margin-bottom: 30px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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"}]}